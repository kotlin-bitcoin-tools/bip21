{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"About","text":"<p>Warning</p> <p>This library should be considered in alpha state. Please use with caution and consider helping to review it.</p> <p>The <code>org.kotlinbitcointools.bip21</code> library is an implementation of the BIP-0021 specification. It is written in Kotlin and is intended to be used in Kotlin Multiplatform projects. Please help us review it and make it production-ready! Comments on the shape of the API are welcome. See the issues for discussion items and design decisions. The library is released under the Apache 2.0 license.</p>"},{"location":"#project-goals","title":"Project Goals","text":"<p>The main goals of this library are:</p> <ul> <li> 1. Be BIP-21 compliant<ul> <li> Encoding and decoding QR-ready strings</li> <li> Typesafe support for all standard parameters</li> <li> Unified QRs</li> <li> Payjoin</li> </ul> </li> <li> 2. Well tested</li> <li> 3. Well documented</li> <li> 4. Production ready</li> <li> 5. Usable in KMP projects and supporting the following targets:<ul> <li> JVM + Android</li> <li> iosArm64</li> <li> iosX64</li> <li> iosSimulatorArm64</li> </ul> </li> </ul>"},{"location":"install/","title":"Install","text":"<p>The library is currently deployed to Maven Central's snapshot repository under the group ID <code>org.kotlinbitcointools</code> and the artifact ID <code>bip21</code>. You can import it in your project as you would any other Maven dependency provided you have the snapshot Maven repository configured as a dependency source:</p> settings.gradle.kts<pre><code>dependencyResolutionManagement {\n    repositories {\n        maven(\"https://s01.oss.sonatype.org/content/repositories/snapshots/\")\n        // mavenCentral()\n    }\n}\n</code></pre> build.gradle.kts<pre><code>implementation(\"org.kotlinbitcointools:bip21:0.1.0-SNAPSHOT\")\n</code></pre>"},{"location":"install/#build-and-deploy-locally","title":"Build and deploy locally","text":"<p>To build the library locally and deploy to your local Maven repository, run the following command: <pre><code>./gradlew publishToMavenLocal\n</code></pre></p> <p>The library will be available in your local Maven repository (typically at <code>~/.m2/repository/</code> for macOS and Linux systems) under the group ID <code>org.kotlinbitcointools</code> and the artifact ID <code>bip21</code>. You can import it in your project as you would any other Maven dependency provided you have your local Maven repository (<code>mavenLocal()</code>) configured as a dependency source: settings.gradle.kts<pre><code>dependencyResolutionManagement {\n    repositories {\n        google()\n        mavenCentral()\n        mavenLocal()\n    }\n}\n</code></pre></p> build.gradle.kts<pre><code>implementation(\"org.kotlinbitcointools:bip21:0.1.0-SNAPSHOT\")\n</code></pre>"},{"location":"usage/","title":"Using the bip21 library","text":"<p>The library is centered around the <code>Bip21URI</code> type, which offers two main functions: </p> <ol> <li><code>Bip21URI.toURI(): String</code>. Note that this method will produce a string ready for QR encoding, but not optimal for human-readability (for example, URLs are percent-encoded). Use the <code>Bip21URI.toString()</code> instead for printing and debugging, or access the fields directly on the object.  </li> <li><code>Bip21URI.fromURI(input: String): Bip21URI</code>. Use this method when reading raw string input from a QR code to parse and produce a typesafe <code>Bip21URI</code> object.</li> </ol> <p>The <code>Bip21URI</code> type is a data class with typesafe fields for each of the standard BIP-21 URI parameters: <code>Amount</code>, <code>Label</code>, <code>Message</code>, <code>Lightning</code>, <code>PayJoin</code>, and other unknown parameters (<code>OtherParameter</code>).</p> <p>For more examples on how to use the library, take a look at the test suite as well as the samples in the API documentation.</p>"}]}